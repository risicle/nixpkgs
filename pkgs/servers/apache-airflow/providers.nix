# Warning: generated by update-providers.py, do not update manually
{
  airbyte = {
    deps = [ "aiohttp" "asgiref" "requests" "requests-toolbelt" ];
    imports = [ "airflow.providers.airbyte.hooks.airbyte" "airflow.providers.airbyte.operators.airbyte" ];
  };
  alibaba = {
    deps = [ "oss2" ];
    imports = [ "airflow.providers.alibaba.cloud.hooks.analyticdb_spark" "airflow.providers.alibaba.cloud.hooks.oss" "airflow.providers.alibaba.cloud.operators.analyticdb_spark" "airflow.providers.alibaba.cloud.operators.oss" ];
  };
  amazon = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "proto-plus" "psycopg2" "pyarrow" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.amazon.aws.hooks.appflow" "airflow.providers.amazon.aws.hooks.athena" "airflow.providers.amazon.aws.hooks.base_aws" "airflow.providers.amazon.aws.hooks.batch_client" "airflow.providers.amazon.aws.hooks.batch_waiters" "airflow.providers.amazon.aws.hooks.chime" "airflow.providers.amazon.aws.hooks.cloud_formation" "airflow.providers.amazon.aws.hooks.datasync" "airflow.providers.amazon.aws.hooks.dms" "airflow.providers.amazon.aws.hooks.dynamodb" "airflow.providers.amazon.aws.hooks.ec2" "airflow.providers.amazon.aws.hooks.ecr" "airflow.providers.amazon.aws.hooks.ecs" "airflow.providers.amazon.aws.hooks.eks" "airflow.providers.amazon.aws.hooks.elasticache_replication_group" "airflow.providers.amazon.aws.hooks.emr" "airflow.providers.amazon.aws.hooks.emr" "airflow.providers.amazon.aws.hooks.eventbridge" "airflow.providers.amazon.aws.hooks.glacier" "airflow.providers.amazon.aws.hooks.glue" "airflow.providers.amazon.aws.hooks.glue_catalog" "airflow.providers.amazon.aws.hooks.glue_crawler" "airflow.providers.amazon.aws.hooks.glue_databrew" "airflow.providers.amazon.aws.hooks.kinesis" "airflow.providers.amazon.aws.hooks.lambda_function" "airflow.providers.amazon.aws.hooks.logs" "airflow.providers.amazon.aws.hooks.quicksight" "airflow.providers.amazon.aws.hooks.rds" "airflow.providers.amazon.aws.hooks.redshift_cluster" "airflow.providers.amazon.aws.hooks.redshift_data" "airflow.providers.amazon.aws.hooks.redshift_sql" "airflow.providers.amazon.aws.hooks.s3" "airflow.providers.amazon.aws.hooks.sagemaker" "airflow.providers.amazon.aws.hooks.secrets_manager" "airflow.providers.amazon.aws.hooks.ses" "airflow.providers.amazon.aws.hooks.sns" "airflow.providers.amazon.aws.hooks.sqs" "airflow.providers.amazon.aws.hooks.ssm" "airflow.providers.amazon.aws.hooks.step_function" "airflow.providers.amazon.aws.hooks.sts" "airflow.providers.amazon.aws.hooks.verified_permissions" "airflow.providers.amazon.aws.operators.appflow" "airflow.providers.amazon.aws.operators.athena" "airflow.providers.amazon.aws.operators.base_aws" "airflow.providers.amazon.aws.operators.batch" "airflow.providers.amazon.aws.operators.cloud_formation" "airflow.providers.amazon.aws.operators.datasync" "airflow.providers.amazon.aws.operators.dms" "airflow.providers.amazon.aws.operators.ec2" "airflow.providers.amazon.aws.operators.ecs" "airflow.providers.amazon.aws.operators.eks" "airflow.providers.amazon.aws.operators.emr" "airflow.providers.amazon.aws.operators.emr" "airflow.providers.amazon.aws.operators.eventbridge" "airflow.providers.amazon.aws.operators.glacier" "airflow.providers.amazon.aws.operators.glue" "airflow.providers.amazon.aws.operators.glue_crawler" "airflow.providers.amazon.aws.operators.glue_databrew" "airflow.providers.amazon.aws.operators.lambda_function" "airflow.providers.amazon.aws.operators.quicksight" "airflow.providers.amazon.aws.operators.rds" "airflow.providers.amazon.aws.operators.redshift_cluster" "airflow.providers.amazon.aws.operators.redshift_data" "airflow.providers.amazon.aws.operators.s3" "airflow.providers.amazon.aws.operators.sagemaker" "airflow.providers.amazon.aws.operators.sns" "airflow.providers.amazon.aws.operators.sqs" "airflow.providers.amazon.aws.operators.step_function" ];
  };
  apache_beam = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "proto-plus" "psycopg2" "pyarrow" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.apache.beam.hooks.beam" "airflow.providers.apache.beam.operators.beam" ];
  };
  apache_cassandra = {
    deps = [ "cassandra-driver" ];
    imports = [ "airflow.providers.apache.cassandra.hooks.cassandra" ];
  };
  apache_drill = {
    deps = [  ];
    imports = [ "airflow.providers.apache.drill.hooks.drill" "airflow.providers.apache.drill.operators.drill" ];
  };
  apache_druid = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "proto-plus" "psycopg2" "pyarrow" "pydruid" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.apache.druid.hooks.druid" "airflow.providers.apache.druid.operators.druid" "airflow.providers.apache.druid.operators.druid_check" ];
  };
  apache_flink = {
    deps = [ "aiofiles" "asgiref" "cryptography" "google-re2" "kubernetes" ];
    imports = [ "airflow.providers.apache.flink.operators.flink_kubernetes" ];
  };
  apache_hdfs = {
    deps = [  ];
    imports = [ "airflow.providers.apache.hdfs.hooks.webhdfs" ];
  };
  apache_hive = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "proto-plus" "psycopg2" "pyarrow" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.apache.hive.hooks.hive" "airflow.providers.apache.hive.operators.hive" "airflow.providers.apache.hive.operators.hive_stats" ];
  };
  apache_impala = {
    deps = [  ];
    imports = [ "airflow.providers.apache.impala.hooks.impala" ];
  };
  apache_kafka = {
    deps = [ "asgiref" "confluent-kafka" ];
    imports = [ "airflow.providers.apache.kafka.hooks.base" "airflow.providers.apache.kafka.hooks.client" "airflow.providers.apache.kafka.hooks.consume" "airflow.providers.apache.kafka.hooks.produce" "airflow.providers.apache.kafka.operators.consume" "airflow.providers.apache.kafka.operators.produce" ];
  };
  apache_kylin = {
    deps = [  ];
    imports = [ "airflow.providers.apache.kylin.hooks.kylin" "airflow.providers.apache.kylin.operators.kylin_cube" ];
  };
  apache_livy = {
    deps = [ "aiohttp" "asgiref" "requests" "requests-toolbelt" ];
    imports = [ "airflow.providers.apache.livy.hooks.livy" "airflow.providers.apache.livy.operators.livy" ];
  };
  apache_pig = {
    deps = [  ];
    imports = [ "airflow.providers.apache.pig.hooks.pig" "airflow.providers.apache.pig.operators.pig" ];
  };
  apache_pinot = {
    deps = [  ];
    imports = [ "airflow.providers.apache.pinot.hooks.pinot" ];
  };
  apache_spark = {
    deps = [ "aiofiles" "asgiref" "cryptography" "google-re2" "grpcio-status" "kubernetes" "pyspark" ];
    imports = [ "airflow.providers.apache.spark.hooks.spark_connect" "airflow.providers.apache.spark.hooks.spark_jdbc" "airflow.providers.apache.spark.hooks.spark_jdbc_script" "airflow.providers.apache.spark.hooks.spark_sql" "airflow.providers.apache.spark.hooks.spark_submit" "airflow.providers.apache.spark.operators.spark_jdbc" "airflow.providers.apache.spark.operators.spark_sql" "airflow.providers.apache.spark.operators.spark_submit" ];
  };
  apache_sqoop = {
    deps = [  ];
    imports = [ "airflow.providers.apache.sqoop.hooks.sqoop" "airflow.providers.apache.sqoop.operators.sqoop" ];
  };
  apprise = {
    deps = [ "apprise" ];
    imports = [ "airflow.providers.apprise.hooks.apprise" ];
  };
  arangodb = {
    deps = [ "python-arango" ];
    imports = [ "airflow.providers.arangodb.hooks.arangodb" "airflow.providers.arangodb.operators.arangodb" ];
  };
  asana = {
    deps = [ "asana" ];
    imports = [ "airflow.providers.asana.hooks.asana" "airflow.providers.asana.operators.asana_tasks" ];
  };
  atlassian_jira = {
    deps = [ "atlassian-python-api" ];
    imports = [ "airflow.providers.atlassian.jira.hooks.jira" "airflow.providers.atlassian.jira.operators.jira" ];
  };
  celery = {
    deps = [ "aiofiles" "asgiref" "celery" "cryptography" "flower" "google-re2" "kubernetes" ];
    imports = [  ];
  };
  cloudant = {
    deps = [  ];
    imports = [ "airflow.providers.cloudant.hooks.cloudant" ];
  };
  cncf_kubernetes = {
    deps = [ "aiofiles" "asgiref" "cryptography" "google-re2" "kubernetes" ];
    imports = [ "airflow.providers.cncf.kubernetes.hooks.kubernetes" "airflow.providers.cncf.kubernetes.operators.pod" "airflow.providers.cncf.kubernetes.operators.resource" "airflow.providers.cncf.kubernetes.operators.spark_kubernetes" ];
  };
  cohere = {
    deps = [ "cohere" ];
    imports = [ "airflow.providers.cohere.hooks.cohere" "airflow.providers.cohere.operators.embedding" ];
  };
  common_io = {
    deps = [  ];
    imports = [ "airflow.providers.common.io.operators.file_transfer" ];
  };
  common_sql = {
    deps = [ "attrs" "sqlparse" ];
    imports = [ "airflow.providers.common.sql.hooks.sql" "airflow.providers.common.sql.operators.sql" ];
  };
  daskexecutor = {
    deps = [ "cloudpickle" "dask" "distributed" ];
    imports = [  ];
  };
  databricks = {
    deps = [ "aiohttp" "databricks-sql-connector" "requests" ];
    imports = [ "airflow.providers.databricks.hooks.databricks" "airflow.providers.databricks.hooks.databricks_base" "airflow.providers.databricks.hooks.databricks_sql" "airflow.providers.databricks.operators.databricks" "airflow.providers.databricks.operators.databricks_repos" "airflow.providers.databricks.operators.databricks_sql" ];
  };
  datadog = {
    deps = [ "datadog" ];
    imports = [ "airflow.providers.datadog.hooks.datadog" ];
  };
  dbt_cloud = {
    deps = [ "aiohttp" "asgiref" "attrs" "requests" "requests-toolbelt" ];
    imports = [ "airflow.providers.dbt.cloud.hooks.dbt" "airflow.providers.dbt.cloud.operators.dbt" ];
  };
  dingding = {
    deps = [ "aiohttp" "asgiref" "requests" "requests-toolbelt" ];
    imports = [ "airflow.providers.dingding.hooks.dingding" "airflow.providers.dingding.operators.dingding" ];
  };
  discord = {
    deps = [ "aiohttp" "asgiref" "requests" "requests-toolbelt" ];
    imports = [ "airflow.providers.discord.hooks.discord_webhook" "airflow.providers.discord.operators.discord_webhook" ];
  };
  docker = {
    deps = [ "docker" "python-dotenv" ];
    imports = [ "airflow.providers.docker.hooks.docker" "airflow.providers.docker.operators.docker" "airflow.providers.docker.operators.docker_swarm" ];
  };
  elasticsearch = {
    deps = [ "elasticsearch" ];
    imports = [ "airflow.providers.elasticsearch.hooks.elasticsearch" ];
  };
  exasol = {
    deps = [ "pandas" ];
    imports = [ "airflow.providers.exasol.hooks.exasol" "airflow.providers.exasol.operators.exasol" ];
  };
  facebook = {
    deps = [  ];
    imports = [ "airflow.providers.facebook.ads.hooks.ads" ];
  };
  ftp = {
    deps = [ "attrs" ];
    imports = [ "airflow.providers.ftp.hooks.ftp" "airflow.providers.ftp.operators.ftp" ];
  };
  github = {
    deps = [  ];
    imports = [ "airflow.providers.github.hooks.github" "airflow.providers.github.operators.github" ];
  };
  google = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "proto-plus" "psycopg2" "pyarrow" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.google.ads.hooks.ads" "airflow.providers.google.ads.operators.ads" "airflow.providers.google.cloud.hooks.automl" "airflow.providers.google.cloud.hooks.bigquery" "airflow.providers.google.cloud.hooks.bigquery_dts" "airflow.providers.google.cloud.hooks.bigtable" "airflow.providers.google.cloud.hooks.cloud_batch" "airflow.providers.google.cloud.hooks.cloud_build" "airflow.providers.google.cloud.hooks.cloud_composer" "airflow.providers.google.cloud.hooks.cloud_memorystore" "airflow.providers.google.cloud.hooks.cloud_run" "airflow.providers.google.cloud.hooks.cloud_sql" "airflow.providers.google.cloud.hooks.cloud_storage_transfer_service" "airflow.providers.google.cloud.hooks.compute" "airflow.providers.google.cloud.hooks.compute_ssh" "airflow.providers.google.cloud.hooks.datacatalog" "airflow.providers.google.cloud.hooks.dataflow" "airflow.providers.google.cloud.hooks.dataform" "airflow.providers.google.cloud.hooks.datafusion" "airflow.providers.google.cloud.hooks.datapipeline" "airflow.providers.google.cloud.hooks.dataplex" "airflow.providers.google.cloud.hooks.dataprep" "airflow.providers.google.cloud.hooks.dataproc" "airflow.providers.google.cloud.hooks.dataproc_metastore" "airflow.providers.google.cloud.hooks.datastore" "airflow.providers.google.cloud.hooks.dlp" "airflow.providers.google.cloud.hooks.functions" "airflow.providers.google.cloud.hooks.gcs" "airflow.providers.google.cloud.hooks.gdm" "airflow.providers.google.cloud.hooks.kms" "airflow.providers.google.cloud.hooks.kubernetes_engine" "airflow.providers.google.cloud.hooks.life_sciences" "airflow.providers.google.cloud.hooks.looker" "airflow.providers.google.cloud.hooks.mlengine" "airflow.providers.google.cloud.hooks.natural_language" "airflow.providers.google.cloud.hooks.os_login" "airflow.providers.google.cloud.hooks.pubsub" "airflow.providers.google.cloud.hooks.secret_manager" "airflow.providers.google.cloud.hooks.spanner" "airflow.providers.google.cloud.hooks.speech_to_text" "airflow.providers.google.cloud.hooks.stackdriver" "airflow.providers.google.cloud.hooks.tasks" "airflow.providers.google.cloud.hooks.text_to_speech" "airflow.providers.google.cloud.hooks.translate" "airflow.providers.google.cloud.hooks.vertex_ai.auto_ml" "airflow.providers.google.cloud.hooks.vertex_ai.batch_prediction_job" "airflow.providers.google.cloud.hooks.vertex_ai.custom_job" "airflow.providers.google.cloud.hooks.vertex_ai.dataset" "airflow.providers.google.cloud.hooks.vertex_ai.endpoint_service" "airflow.providers.google.cloud.hooks.vertex_ai.hyperparameter_tuning_job" "airflow.providers.google.cloud.hooks.vertex_ai.model_service" "airflow.providers.google.cloud.hooks.vertex_ai.pipeline_job" "airflow.providers.google.cloud.hooks.video_intelligence" "airflow.providers.google.cloud.hooks.vision" "airflow.providers.google.cloud.hooks.workflows" "airflow.providers.google.cloud.operators.automl" "airflow.providers.google.cloud.operators.bigquery" "airflow.providers.google.cloud.operators.bigquery_dts" "airflow.providers.google.cloud.operators.bigtable" "airflow.providers.google.cloud.operators.cloud_base" "airflow.providers.google.cloud.operators.cloud_batch" "airflow.providers.google.cloud.operators.cloud_build" "airflow.providers.google.cloud.operators.cloud_composer" "airflow.providers.google.cloud.operators.cloud_memorystore" "airflow.providers.google.cloud.operators.cloud_run" "airflow.providers.google.cloud.operators.cloud_sql" "airflow.providers.google.cloud.operators.cloud_storage_transfer_service" "airflow.providers.google.cloud.operators.compute" "airflow.providers.google.cloud.operators.datacatalog" "airflow.providers.google.cloud.operators.dataflow" "airflow.providers.google.cloud.operators.dataform" "airflow.providers.google.cloud.operators.datafusion" "airflow.providers.google.cloud.operators.datapipeline" "airflow.providers.google.cloud.operators.dataplex" "airflow.providers.google.cloud.operators.dataprep" "airflow.providers.google.cloud.operators.dataproc" "airflow.providers.google.cloud.operators.dataproc_metastore" "airflow.providers.google.cloud.operators.datastore" "airflow.providers.google.cloud.operators.dlp" "airflow.providers.google.cloud.operators.functions" "airflow.providers.google.cloud.operators.gcs" "airflow.providers.google.cloud.operators.kubernetes_engine" "airflow.providers.google.cloud.operators.life_sciences" "airflow.providers.google.cloud.operators.looker" "airflow.providers.google.cloud.operators.mlengine" "airflow.providers.google.cloud.operators.natural_language" "airflow.providers.google.cloud.operators.pubsub" "airflow.providers.google.cloud.operators.spanner" "airflow.providers.google.cloud.operators.speech_to_text" "airflow.providers.google.cloud.operators.stackdriver" "airflow.providers.google.cloud.operators.tasks" "airflow.providers.google.cloud.operators.text_to_speech" "airflow.providers.google.cloud.operators.translate" "airflow.providers.google.cloud.operators.translate_speech" "airflow.providers.google.cloud.operators.translate_speech" "airflow.providers.google.cloud.operators.vertex_ai.auto_ml" "airflow.providers.google.cloud.operators.vertex_ai.batch_prediction_job" "airflow.providers.google.cloud.operators.vertex_ai.custom_job" "airflow.providers.google.cloud.operators.vertex_ai.dataset" "airflow.providers.google.cloud.operators.vertex_ai.endpoint_service" "airflow.providers.google.cloud.operators.vertex_ai.hyperparameter_tuning_job" "airflow.providers.google.cloud.operators.vertex_ai.model_service" "airflow.providers.google.cloud.operators.vertex_ai.pipeline_job" "airflow.providers.google.cloud.operators.video_intelligence" "airflow.providers.google.cloud.operators.vision" "airflow.providers.google.cloud.operators.workflows" "airflow.providers.google.common.hooks.base_google" "airflow.providers.google.common.hooks.discovery_api" "airflow.providers.google.firebase.hooks.firestore" "airflow.providers.google.firebase.operators.firestore" "airflow.providers.google.leveldb.hooks.leveldb" "airflow.providers.google.leveldb.operators.leveldb" "airflow.providers.google.marketing_platform.hooks.analytics" "airflow.providers.google.marketing_platform.hooks.analytics_admin" "airflow.providers.google.marketing_platform.hooks.campaign_manager" "airflow.providers.google.marketing_platform.hooks.display_video" "airflow.providers.google.marketing_platform.hooks.search_ads" "airflow.providers.google.marketing_platform.operators.analytics" "airflow.providers.google.marketing_platform.operators.analytics_admin" "airflow.providers.google.marketing_platform.operators.campaign_manager" "airflow.providers.google.marketing_platform.operators.display_video" "airflow.providers.google.marketing_platform.operators.search_ads" "airflow.providers.google.suite.hooks.calendar" "airflow.providers.google.suite.hooks.drive" "airflow.providers.google.suite.hooks.sheets" "airflow.providers.google.suite.operators.sheets" ];
  };
  grpc = {
    deps = [ "google-auth" "google-auth-httplib2" "grpcio" ];
    imports = [ "airflow.providers.grpc.hooks.grpc" "airflow.providers.grpc.operators.grpc" ];
  };
  hashicorp = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "hvac" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "proto-plus" "psycopg2" "pyarrow" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.hashicorp.hooks.vault" ];
  };
  http = {
    deps = [ "aiohttp" "asgiref" "requests" "requests-toolbelt" ];
    imports = [ "airflow.providers.http.hooks.http" "airflow.providers.http.operators.http" ];
  };
  imap = {
    deps = [  ];
    imports = [ "airflow.providers.imap.hooks.imap" ];
  };
  influxdb = {
    deps = [ "influxdb-client" "requests" ];
    imports = [ "airflow.providers.influxdb.hooks.influxdb" "airflow.providers.influxdb.operators.influxdb" ];
  };
  jdbc = {
    deps = [ "jaydebeapi" ];
    imports = [ "airflow.providers.jdbc.hooks.jdbc" "airflow.providers.jdbc.operators.jdbc" ];
  };
  jenkins = {
    deps = [ "python-jenkins" ];
    imports = [ "airflow.providers.jenkins.hooks.jenkins" "airflow.providers.jenkins.operators.jenkins_job_trigger" ];
  };
  microsoft_azure = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "proto-plus" "psycopg2" "pyarrow" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.microsoft.azure.hooks.adx" "airflow.providers.microsoft.azure.hooks.asb" "airflow.providers.microsoft.azure.hooks.base_azure" "airflow.providers.microsoft.azure.hooks.batch" "airflow.providers.microsoft.azure.hooks.container_instance" "airflow.providers.microsoft.azure.hooks.container_registry" "airflow.providers.microsoft.azure.hooks.container_volume" "airflow.providers.microsoft.azure.hooks.cosmos" "airflow.providers.microsoft.azure.hooks.data_factory" "airflow.providers.microsoft.azure.hooks.data_lake" "airflow.providers.microsoft.azure.hooks.data_lake" "airflow.providers.microsoft.azure.hooks.fileshare" "airflow.providers.microsoft.azure.hooks.synapse" "airflow.providers.microsoft.azure.hooks.wasb" "airflow.providers.microsoft.azure.operators.adls" "airflow.providers.microsoft.azure.operators.adx" "airflow.providers.microsoft.azure.operators.asb" "airflow.providers.microsoft.azure.operators.batch" "airflow.providers.microsoft.azure.operators.container_instances" "airflow.providers.microsoft.azure.operators.cosmos" "airflow.providers.microsoft.azure.operators.data_factory" "airflow.providers.microsoft.azure.operators.synapse" "airflow.providers.microsoft.azure.operators.wasb_delete_blob" ];
  };
  microsoft_mssql = {
    deps = [  ];
    imports = [ "airflow.providers.microsoft.mssql.hooks.mssql" "airflow.providers.microsoft.mssql.operators.mssql" ];
  };
  microsoft_psrp = {
    deps = [ "pypsrp" ];
    imports = [ "airflow.providers.microsoft.psrp.hooks.psrp" "airflow.providers.microsoft.psrp.operators.psrp" ];
  };
  microsoft_winrm = {
    deps = [ "pywinrm" ];
    imports = [ "airflow.providers.microsoft.winrm.hooks.winrm" "airflow.providers.microsoft.winrm.operators.winrm" ];
  };
  mongo = {
    deps = [ "dnspython" "pymongo" ];
    imports = [ "airflow.providers.mongo.hooks.mongo" ];
  };
  mysql = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "proto-plus" "psycopg2" "pyarrow" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.mysql.hooks.mysql" "airflow.providers.mysql.operators.mysql" ];
  };
  neo4j = {
    deps = [ "neo4j" ];
    imports = [ "airflow.providers.neo4j.hooks.neo4j" "airflow.providers.neo4j.operators.neo4j" ];
  };
  odbc = {
    deps = [ "pyodbc" ];
    imports = [ "airflow.providers.odbc.hooks.odbc" ];
  };
  openai = {
    deps = [  ];
    imports = [ "airflow.providers.openai.hooks.openai" "airflow.providers.openai.operators.openai" ];
  };
  openfaas = {
    deps = [  ];
    imports = [ "airflow.providers.openfaas.hooks.openfaas" ];
  };
  openlineage = {
    deps = [ "attrs" ];
    imports = [  ];
  };
  opensearch = {
    deps = [ "opensearch-py" ];
    imports = [ "airflow.providers.opensearch.hooks.opensearch" "airflow.providers.opensearch.operators.opensearch" ];
  };
  opsgenie = {
    deps = [  ];
    imports = [ "airflow.providers.opsgenie.hooks.opsgenie" "airflow.providers.opsgenie.operators.opsgenie" ];
  };
  oracle = {
    deps = [ "oracledb" ];
    imports = [ "airflow.providers.oracle.hooks.oracle" "airflow.providers.oracle.operators.oracle" ];
  };
  pagerduty = {
    deps = [  ];
    imports = [ "airflow.providers.pagerduty.hooks.pagerduty" "airflow.providers.pagerduty.hooks.pagerduty_events" ];
  };
  papermill = {
    deps = [ "ipykernel" ];
    imports = [ "airflow.providers.papermill.hooks.kernel" "airflow.providers.papermill.operators.papermill" ];
  };
  pgvector = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "pgvector" "proto-plus" "psycopg2" "pyarrow" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.pgvector.hooks.pgvector" "airflow.providers.pgvector.operators.pgvector" ];
  };
  pinecone = {
    deps = [ "pinecone-client" ];
    imports = [ "airflow.providers.pinecone.hooks.pinecone" "airflow.providers.pinecone.operators.pinecone" ];
  };
  plexus = {
    deps = [ "arrow" ];
    imports = [ "airflow.providers.plexus.hooks.plexus" "airflow.providers.plexus.operators.job" ];
  };
  postgres = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "proto-plus" "psycopg2" "pyarrow" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.postgres.hooks.postgres" "airflow.providers.postgres.operators.postgres" ];
  };
  presto = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "proto-plus" "psycopg2" "pyarrow" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.presto.hooks.presto" ];
  };
  redis = {
    deps = [ "redis" ];
    imports = [ "airflow.providers.redis.hooks.redis" "airflow.providers.redis.operators.redis_publish" ];
  };
  salesforce = {
    deps = [ "pandas" "simple-salesforce" ];
    imports = [ "airflow.providers.salesforce.hooks.salesforce" "airflow.providers.salesforce.operators.bulk" "airflow.providers.salesforce.operators.salesforce_apex_rest" ];
  };
  samba = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "proto-plus" "psycopg2" "pyarrow" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.samba.hooks.samba" ];
  };
  segment = {
    deps = [  ];
    imports = [ "airflow.providers.segment.hooks.segment" "airflow.providers.segment.operators.segment_track_event" ];
  };
  sendgrid = {
    deps = [ "sendgrid" ];
    imports = [  ];
  };
  sftp = {
    deps = [ "attrs" "paramiko" "pysftp" "sshtunnel" ];
    imports = [ "airflow.providers.sftp.hooks.sftp" "airflow.providers.sftp.operators.sftp" ];
  };
  singularity = {
    deps = [ "spython" ];
    imports = [ "airflow.providers.singularity.operators.singularity" ];
  };
  slack = {
    deps = [ "slack-sdk" ];
    imports = [ "airflow.providers.slack.hooks.slack" "airflow.providers.slack.hooks.slack_webhook" "airflow.providers.slack.operators.slack" "airflow.providers.slack.operators.slack_webhook" ];
  };
  smtp = {
    deps = [  ];
    imports = [ "airflow.providers.smtp.hooks.smtp" "airflow.providers.smtp.operators.smtp" ];
  };
  snowflake = {
    deps = [ "attrs" "snowflake-connector-python" "snowflake-sqlalchemy" ];
    imports = [ "airflow.providers.snowflake.hooks.snowflake" "airflow.providers.snowflake.hooks.snowflake_sql_api" "airflow.providers.snowflake.operators.snowflake" ];
  };
  sqlite = {
    deps = [  ];
    imports = [ "airflow.providers.sqlite.hooks.sqlite" "airflow.providers.sqlite.operators.sqlite" ];
  };
  ssh = {
    deps = [ "paramiko" "sshtunnel" ];
    imports = [ "airflow.providers.ssh.hooks.ssh" "airflow.providers.ssh.operators.ssh" ];
  };
  tableau = {
    deps = [ "tableauserverclient" ];
    imports = [ "airflow.providers.tableau.hooks.tableau" "airflow.providers.tableau.operators.tableau" ];
  };
  tabular = {
    deps = [  ];
    imports = [ "airflow.providers.tabular.hooks.tabular" ];
  };
  telegram = {
    deps = [ "python-telegram-bot" ];
    imports = [ "airflow.providers.telegram.hooks.telegram" "airflow.providers.telegram.operators.telegram" ];
  };
  trino = {
    deps = [ "adal" "adlfs" "aiofiles" "aiohttp" "apache-beam" "asgiref" "attrs" "azure-batch" "azure-cosmos" "azure-datalake-store" "azure-identity" "azure-keyvault-secrets" "azure-mgmt-containerinstance" "azure-mgmt-containerregistry" "azure-mgmt-cosmosdb" "azure-mgmt-datafactory" "azure-mgmt-datalake-store" "azure-mgmt-resource" "azure-mgmt-storage" "azure-servicebus" "azure-storage-blob" "azure-storage-file-share" "azure-synapse-artifacts" "azure-synapse-spark" "boto3" "botocore" "cassandra-driver" "cryptography" "dnspython" "gcsfs" "google-api-core" "google-api-python-client" "google-auth" "google-auth-httplib2" "google-cloud-automl" "google-cloud-bigquery-datatransfer" "google-cloud-bigtable" "google-cloud-compute" "google-cloud-container" "google-cloud-datacatalog" "google-cloud-dataproc" "google-cloud-dlp" "google-cloud-kms" "google-cloud-language" "google-cloud-logging" "google-cloud-monitoring" "google-cloud-pubsub" "google-cloud-redis" "google-cloud-secret-manager" "google-cloud-spanner" "google-cloud-speech" "google-cloud-storage" "google-cloud-tasks" "google-cloud-texttospeech" "google-cloud-translate" "google-cloud-videointelligence" "google-cloud-vision" "google-re2" "grpcio-gcp" "httpx" "inflection" "json-merge-patch" "jsonpath-ng" "kubernetes" "mysqlclient" "oracledb" "pandas" "paramiko" "proto-plus" "psycopg2" "pyarrow" "pymongo" "pyopenssl" "pysftp" "redshift-connector" "requests" "requests-toolbelt" "simple-salesforce" "smbprotocol" "sshtunnel" "thrift" "vertica-python" ];
    imports = [ "airflow.providers.trino.hooks.trino" "airflow.providers.trino.operators.trino" ];
  };
  vertica = {
    deps = [ "vertica-python" ];
    imports = [ "airflow.providers.vertica.hooks.vertica" "airflow.providers.vertica.operators.vertica" ];
  };
  weaviate = {
    deps = [ "pandas" "weaviate-client" ];
    imports = [ "airflow.providers.weaviate.hooks.weaviate" "airflow.providers.weaviate.operators.weaviate" ];
  };
  yandex = {
    deps = [  ];
    imports = [ "airflow.providers.yandex.hooks.yandex" "airflow.providers.yandex.hooks.yandexcloud_dataproc" "airflow.providers.yandex.operators.yandexcloud_dataproc" ];
  };
  zendesk = {
    deps = [  ];
    imports = [ "airflow.providers.zendesk.hooks.zendesk" ];
  };
}
